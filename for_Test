<Iris 분류>, Diabetes + Raisin + Titanic
- 분류: 특정 X값이 들어오면, 그 X값에 대응하는 적절한 Y값을 찾아내는 모델을 연구하는 방법론. 사실상 회귀랑 똑같다. 
정확도 평가방법이 회귀는 MSE고, 분류는 ConfusionMatrix 차이+ 분류는 데이터가 이산적인 값이고 회귀는 연속적인 값

<Diabetes>가 가장 자세한 Classification 과정을 담고있음
1. 라이브러리 추가
2. 데이터 로딩- 컬럼명확인
3. 레이블 갯수 확인(그래프,숫자)
4. 결측치 확인
5. 결측치 제거
6. 컬럼별 히스토그램 확인
7. 산점도 확인
8. 특정 칼럼의 범위 확인 및 outlier 확인 
9. 각 컬럼별 히스토그램 확인
10. 데이터 표준화
11. x,y 나누기
12. x트레인 y트레인 x테스트 y테스트 나누기
13. 알고리즘 훈련- 혼동행렬로 정확도평가
- SVM
- LogisticRegrssion
- Decision Tree Classifier
- Neural Network Classifier
- Radom Forest



<보스턴 회귀분석>
회귀분석: 특정 X값이 들어오면, 그 X값에 대응하는 적절한 Y값을 찾아내는 모델을 연구하는 방법론. 손실함수를 최소화하는 가중치와 bias를 찾아야한다.
1. 라이브러리 추가 
2. 데이터 로딩 
3. 상관관계행렬 및 히트맵 생성 (for 가격에 영향을 미치는 변수 알아보기 위함)
4. 영향력있는 독립변수들만 추린 데이터프레임 생성
5. 훈련용 X,Y / 테스트용 X,Y값을 나눔
6. 회귀 모델로 fitting-정확도확인
7. 예측값과 실제값 차이를 산점도로 시각화해서 표시
8. 다른 회귀 모델로 6,7 반복
----------------------------------
입력변수(독립변수) 값들에 해당하는 출력변수(종속변수)를 각 알고리즘별로 학습시키고 테스트하는 과정 후 정확도(mse)확인
Q1. 결측치 제거 안함?


numpy의 주요 데이터구조는 ndarry다. 따라서 Numpy는 같은 타입의 데이터를 저장해야한다. 반면 pandas의 주요 데이터구조는 DataFrame과 series(1차원)다. 따라서 Pandas는 테이블형태이므로 문자,숫자,날짜 등 다양한 데이터타입 혼합가능.
그 외에도 pandas는 주로 데이터 분석 및 전처리에 사용됨. 반면 numpy는 수치적 처리에 특화되어 선형대수,통계분석,딥러닝,머신러닝 등에 사용됨
matplotlib 과 seaborn 모두 시각화 라이브러리. 그렇지만 seaborn이 matplotlib 기반이고, 더 간편하고 시각적으로 보기좋다.

특징(feature) = 입력변수 = 독립변수 
출력변수 = 클래스 = 범주 = 레이블 = 타겟 = 타겟변수 = 종속변수

Q1. 수업시간에 한 회귀, 분류 간 과정의 차이만 이해하면 되는지
Q2. 분류에서 사용한 알고리즘과 회귀분석에서 사용한 알고리즘 각각의 종류 알아두기
Q3. 

- 데이터 분류에 유의미한 특징(feature)을 열 형태로 특징의 이름과 데이터로 구성된 값들을 2차원 배열형태로 저장하기 위해 데이터를 불러와서 pandas df로 저장 + 그에 대응하는 레이블(=클래스=범주=정답) 역시 열 형태로 저장.
- 알아서 특징을 구성하도록 데이터를 컴퓨터에 주되, 무작정 주는 것이 아니라 훈련-테스트 두 과정을 거침.
전체 데이터를 훈련값:테스트값으로 8:2 혹은 7:3 비율로 나눔. 이때 훈련값은 훈련을 위해 입력하는 특징(X_train)와 그에 맞는 레이블(Y_train)로 나뉨. 테스트값역시 훈련이 제대로 됐는지 확인하기 위한 테스트용 특징 입력값(X_test)과 그에 맞는 테스트용 레이블(Y_test)
- 

결측치제거는 언제? 
산점도분석은 언제? for 클래스불균형
